name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-security-checks:
    name: Lint & Dependency Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml # Optional, or remove this line
        continue-on-error: true

  trivy-scan:
    name: Trivy Security Scans
    runs-on: ubuntu-latest
    needs: lint-and-security-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dockerfile security scan (Trivy config)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ./Dockerfile
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Project directory scan (Trivy FS)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          exit-code: "1"
          severity: "HIGH,CRITICAL"

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/razhel/crypto-exchange-app/crypto-exchange-app:${{ github.sha }} # This is your unique tag

  deploy-to-minikube:
    name: Deploy to Minikube (Self-Hosted)
    runs-on: [self-hosted, fedora, minikube]
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy with Helm to local Minikube
        env:
          IMAGE_TAG: ${{ github.sha }} # Use commit SHA as tag
        run: |
          helm upgrade --install crypto-app \
            ./helm/crypto-app \
            --set image.repository=ghcr.io/razhel/crypto-exchange-app/crypto-exchange-app \
            --set image.tag=${IMAGE_TAG} \
            --namespace default \
            --create-namespace

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/crypto-app \
            --namespace default \
            --timeout=150s
